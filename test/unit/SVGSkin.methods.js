async function call (fn, context, args) {
    return [
        ['comment', `${fn.name}(...${JSON.stringify(args)})`],
        ...((await fn(context, ...args)) || []).map(test => test[test.length - 1].stack ? test : [...test, {stack: new Error(test[test.length - 1]).stack.split('\n').slice(4).join('\n')}])
    ];
}
function loadModuleVarTest (context, name, srcPath) {
    context.module = context.module || {};
    context.module[name] = window.ScratchRenderFiles(srcPath);
    return [['ok', context.module[name], `module ${name} loaded`]];
}
function createCanvas (context) {
    context.canvas = document.createElement('canvas');
    context.canvas.width = 480;
    context.canvas.height = 360;
}
function newRenderWebGL (context) {
    context.renderer = new context.module.RenderWebGL(context.canvas);
}
function valueTest (context, key) {
    context.value = context[key];
    return [['ok', typeof context.value !== 'undefined', 'context.value is set']];
}
function hasPropertyTest (context, key) {
    // Test that this does not throw.
    context.value[key];
    return [['ok', key in context.value, `has ${key} property`]];
}
function skinIdTest (context) {
    context.skinId = Math.random().toString().slice(2);
}
function newSVGSkin (context) {
    context.value = context.skin = new context.module.SVGSkin(context.skinId, context.renderer);
}
function hasPropertiesTest (context, keys) {
    // Test that this does not throw.
    for (const key of keys) {
        context.value[key];
    }
    return keys.map(key => (
    ['ok', key in context.value, `has ${key} property`]
    ));
}
function rotationCenterIsArray (context) {
    return [['ok', context.value.rotationCenter.length >= 2, 'rotationCenter is an array']];
}
function dispose (context) {
    context.skin.dispose();
    return [['equal',
            context.skin.id,
            context.module.RenderConstants.ID_NONE,
            'disposed of its id'
    ]];
}
function willEmitEventTest (context, event) {
    context.event = context.event || {};
    context.event[event] = {
        called: false,
        calledPromise: null,
        call: []
    };
    context.event[event].calledPromise = new Promise(function (resolve) {
        context.value.on(event, function (...args) {
            context.event[event].called = true;
            context.event[event].call.push(args);
            resolve(context.event[event]);
        });
    });
}
async function loadAsset_fetch (context, name) {
    context.assetResponse = await fetch(`./assets/${name}`);
    return [
        ['comment', `fetch('./assets/${name}')`],
        ['equal', typeof context.assetResponse, 'object', 'sent asset request']
    ];
}
function storeImageSize (context, size) {
    context.imageSize = size;
}
async function loadSVG_text (context) {
    context.imageSource = await context.assetResponse.text();
    return [
        ['equal', typeof context.imageSource, 'string', 'loaded svg string']
    ];
}
function setSVG (context) {
    context.imageRotationCenter = context.imageSize.map(dim => dim / 2);
    context.skin.setSVG(context.imageSource);
}
function skinSize (context) {
    const {size} = context.skin;
    return [['same',
            [Math.ceil(size[0]), Math.ceil(size[1])],
            context.imageSize,
            'skin.size matches image size'
    ]];
}
async function didEmitEventTest (context, event) {
    return [
        await Promise.race([
            context.event[event].calledPromise
            .then(({called}) => (['ok', called, `did emit ${event}`])),
            new Promise((resolve) => setTimeout(resolve, 100))
            .then(() => (['fail', 'timeout']))
        ])
    ];
}
function skinRotationCenter (context) {
    const {rotationCenter} = context.skin;
    return [['same',
            [Math.ceil(rotationCenter[0]), Math.ceil(rotationCenter[1])],
            context.imageRotationCenter,
            'skin.rotationCenter matches'
    ]];
}
function texture (context, scale) {
    const tex = context.skin.getTexture(scale);
    const uniforms = context.skin.getUniforms(scale);
    return [
        ['ok', tex !== null && typeof tex === 'object', 'returns texture'],
        ['ok', uniforms.u_skin === tex, 'u_skin is texture'],
        ['same', Array.from(uniforms.u_skinSize, Math.ceil), context.imageSize, 'u_skinSize is size']
    ];
}
function setSVG_rotationCenter (context) {
    context.imageRotationCenter = [10, 10];
    context.skin.setSVG(context.imageSource, [10, 10]);
}
function setOldImageRotationCenter (context) {
    context.oldImageRotationCenter = context.imageRotationCenter;
}
function oldSkinRotationCenter (context) {
    const {rotationCenter} = context.skin;
    return [['same',
            [Math.ceil(rotationCenter[0]), Math.ceil(rotationCenter[1])],
            context.oldImageRotationCenter,
            'rotationCenter has not updated yet'
    ]];
}
// 1: new SVGSkin, dispose
async function test_1 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(loadModuleVarTest, context, ["RenderConstants","./RenderConstants.js"])),
        ...(await call(dispose, context, []))
    ];
}
// 2: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), dispose
async function test_2 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(loadModuleVarTest, context, ["RenderConstants","./RenderConstants.js"])),
        ...(await call(dispose, context, []))
    ];
}
// 3: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), dispose
async function test_3 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(loadModuleVarTest, context, ["RenderConstants","./RenderConstants.js"])),
        ...(await call(dispose, context, []))
    ];
}
// 4: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_4 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 5: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_5 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 6: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_6 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 7: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_7 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 8: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_8 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 9: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_9 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 10: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_10 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 11: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_11 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["on","off"]])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["id","rotationCenter","isRaster","hasPremultipliedAlpha"]])),
        ...(await call(rotationCenterIsArray, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 12: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_12 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 13: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_13 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 14: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_14 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 15: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_15 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 16: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_16 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 17: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_17 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 18: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_18 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 19: new SVGSkin, setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_19 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 20: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_20 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 21: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_21 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 22: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_22 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 23: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_23 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 24: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_24 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 25: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_25 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 26: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_26 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 27: new SVGSkin, setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_27 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 28: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_28 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 29: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_29 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 30: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_30 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 31: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_31 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 32: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_32 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 33: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_33 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 34: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_34 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 35: new SVGSkin, setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_35 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 36: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_36 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 37: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_37 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 38: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_38 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 39: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_39 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 40: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_40 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 41: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_41 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 42: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_42 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 43: new SVGSkin, setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_43 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 44: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_44 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 45: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_45 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 46: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_46 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 47: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_47 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 48: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_48 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 49: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_49 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 50: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_50 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 51: new SVGSkin, setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_51 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 52: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_52 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 53: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_53 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 54: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_54 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 55: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_55 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 56: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_56 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 57: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_57 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 58: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_58 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 59: new SVGSkin, setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_59 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 60: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_60 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 61: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_61 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 62: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_62 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 63: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_63 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 64: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_64 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 65: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_65 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 66: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_66 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 67: new SVGSkin, setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_67 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 68: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_68 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 69: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(orange50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_69 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["orange50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 70: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_70 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 71: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(purple100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_71 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["purple100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 72: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_72 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 73: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient50x50.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_73 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient50x50.svg"])),
        ...(await call(storeImageSize, context, [[50,50]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 74: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_74 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
// 75: new SVGSkin, setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200]), setSVG(gradient100x100.svg, [10, 10]), getTexture(), getTexture([100,100]), getTexture([200,200])
async function test_75 () {
    const context = {};
    return [
        ...(await call(loadModuleVarTest, context, ["RenderWebGL","./RenderWebGL.js"])),
        ...(await call(createCanvas, context, [])),
        ...(await call(newRenderWebGL, context, [])),
        ...(await call(valueTest, context, ["renderer"])),
        ...(await call(hasPropertyTest, context, ["gl"])),
        ...(await call(hasPropertyTest, context, ["canvas"])),
        ...(await call(skinIdTest, context, [])),
        ...(await call(loadModuleVarTest, context, ["SVGSkin","./SVGSkin.js"])),
        ...(await call(newSVGSkin, context, [])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]])),
        ...(await call(willEmitEventTest, context, ["WasAltered"])),
        ...(await call(loadAsset_fetch, context, ["gradient100x100.svg"])),
        ...(await call(storeImageSize, context, [[100,100]])),
        ...(await call(loadSVG_text, context, [])),
        ...(await call(setOldImageRotationCenter, context, [])),
        ...(await call(setSVG_rotationCenter, context, [])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertyTest, context, ["size"])),
        ...(await call(skinSize, context, [])),
        ...(await call(hasPropertyTest, context, ["rotationCenter"])),
        ...(await call(oldSkinRotationCenter, context, [])),
        ...(await call(didEmitEventTest, context, ["WasAltered"])),
        ...(await call(valueTest, context, ["skin"])),
        ...(await call(hasPropertiesTest, context, [["size","rotationCenter"]])),
        ...(await call(skinRotationCenter, context, [])),
        ...(await call(texture, context, [null])),
        ...(await call(texture, context, [[100,100]])),
        ...(await call(texture, context, [[200,200]]))
    ];
}
